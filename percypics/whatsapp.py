# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/02-whatsapp-integration.ipynb (unless otherwise specified).

__all__ = ['initialise_client', 'get_random_post', 'send_post', 'check_msg_status']

# Cell
import pandas as pd

from twilio.rest import Client

import os
import time
import dotenv
import logging

# Cell
from warnings import warn

def initialise_client():
    account_sid = os.getenv('TWILIO_SID')
    auth_token = os.getenv('TWILIO_TOKEN')
    warn(f'{account_sid}, {auth_token}')
    if (account_sid is not None) and (auth_token is not None):
        client = Client(account_sid, auth_token)
    else:
        raise ValueError('Client could not be created')

    return client

# Cell
get_random_post = lambda fp='../data/percy_posts.csv': pd.read_csv(fp).sample(1).T.iloc[:, 0].to_dict()

# Cell
def send_post(client, post, wa_recipient):
    msg_body = post['caption'] + '\n\nDate: ' + post['date']

    message = client.messages.create(
        from_='whatsapp:+14155238886',
        body=msg_body,
        to=f'whatsapp:{wa_recipient}',
        media_url=post['media_url']
    )

    return message

# Cell
def check_msg_status(client, message, wa_recipient):
    time.sleep(2)
    status = client.messages(message.sid).fetch().status

    if status not in ['read', 'sent']:
        logger = logging.getLogger('dog_bot')
        logger.setLevel('INFO')
        logger.info(f'The message to {wa_recipient} could not be sent')

    return